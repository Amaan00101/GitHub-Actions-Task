name: SonarCloud and Trivy Scan

on:
  push:
    branches:
      - main 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Step 2: Set up JDK and SonarScanner
      - name: Setup JDK and SonarScanner
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      # Step 3: Install SonarScanner
      - name: Install SonarScanner
        run: |
          curl -o sonar-scanner-cli.zip -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip -q sonar-scanner-cli.zip -d $HOME/sonar-scanner
          echo "export PATH=$HOME/sonar-scanner/sonar-scanner-4.6.2.2472-linux/bin:\$PATH" >> $HOME/.bashrc
          source $HOME/.bashrc

      # # Step 4: SonarCloud Scan
      # - name: SonarCloud Scan
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      #   run: |
      #     sonar-scanner \
      #       -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
      #       -Dsonar.organization=amaan00101 \
      #       -Dsonar.sources=.


      # # Step 5: Scan Docker image with Trivy
      # - name: Trivy Scan Docker Image
      #   run: |
      #     docker pull apppy:latest
      #     docker run --rm -v $(pwd):/work aquasec/trivy:latest --exit-code 0 --severity HIGH,CRITICAL apppy:latest

      # Step 6: Push Docker image to DockerHub
      - name: Push to DockerHub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo "${DOCKERHUB_TOKEN}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
          docker push apppy:latest

      # Step 7: Show SonarCloud and Trivy scan reports in console
      - name: Display Scan Reports
        run: |
          echo "SonarCloud and Trivy Scan Completed Successfully!"
